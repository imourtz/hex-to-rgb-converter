{"ast":null,"code":"var _jsxFileName = \"/home/ioanna/Projects/hex-to-rgb/src/HexInput.js\";\nimport React from 'react';\nimport hexRgb from 'hex-rgb';\nimport IconCopy from './IconCopy';\n\nclass HexInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [],\n      inputValue: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.demoDisplay = this.demoDisplay.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const hex = this.state.inputValue;\n      const rgb = hexRgb(hex);\n      const newHistory = [...this.state.history];\n      newHistory.unshift({\n        hex,\n        rgb\n      });\n      this.setState({\n        inputValue: '',\n        history: newHistory,\n        copySuccess: ''\n      });\n      const storeString = JSON.stringify(newHistory);\n      localStorage.setItem('History', storeString);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  handleClear() {\n    this.setState({\n      history: []\n    });\n    localStorage.clear('History');\n  }\n\n  demoDisplay() {\n    const demoHistory = [...this.state.history];\n    demoHistory.unshift({\n      \"hex\": \"ccc\",\n      \"rgb\": {\n        \"red\": 204,\n        \"green\": 204,\n        \"blue\": 204,\n        \"alpha\": 1\n      }\n    }, {\n      \"hex\": \"bbb\",\n      \"rgb\": {\n        \"red\": 187,\n        \"green\": 187,\n        \"blue\": 187,\n        \"alpha\": 1\n      }\n    }, {\n      \"hex\": \"333\",\n      \"rgb\": {\n        \"red\": 51,\n        \"green\": 51,\n        \"blue\": 51,\n        \"alpha\": 1\n      }\n    });\n    this.setState({\n      history: demoHistory\n    });\n  }\n\n  componentDidMount() {\n    const storage = localStorage.getItem('History');\n    const storageObject = JSON.parse(storage) || [];\n    this.setState({\n      history: storageObject\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Welcome to HEX to RGB Converter!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"To convert your HEX color code to RGB please insert your code below.\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary\",\n      disabled: this.state.history.length !== 0,\n      onClick: this.demoDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"DEMO\")))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: this.handleChange,\n      required: true,\n      placeholder: \"HEX:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Convert\"))))), this.state.history.length !== 0 ? React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block p-2 bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Your History:\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.history.map((item, index) => {\n      const color = \"rgba(\".concat(item.rgb.red, \", \").concat(item.rgb.green, \", \").concat(item.rgb.blue, \", \").concat(item.rgb.alpha, \")\");\n      return React.createElement(\"div\", {\n        key: index,\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"history-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\".concat(item.hex, \" = \").concat(color))), React.createElement(\"span\", {\n        className: \"d-flex justify-content-center align-items-center colorLink\",\n        onClick: () => {\n          window.navigator.clipboard.writeText(color).then(() => {}).catch(() => {\n            alert('Ooops! Something went wrong!');\n          });\n        },\n        style: {\n          backgroundColor: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(IconCopy, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    })), React.createElement(\"button\", {\n      className: \"btn btn-outline-primary\",\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Clear History\"))) : null));\n  }\n\n}\n\nexport default HexInput;","map":{"version":3,"sources":["/home/ioanna/Projects/hex-to-rgb/src/HexInput.js"],"names":["React","hexRgb","IconCopy","HexInput","Component","constructor","props","state","history","inputValue","handleChange","bind","handleSubmit","handleClear","demoDisplay","e","setState","target","value","preventDefault","hex","rgb","newHistory","unshift","copySuccess","storeString","JSON","stringify","localStorage","setItem","error","alert","clear","demoHistory","componentDidMount","storage","getItem","storageObject","parse","render","length","map","item","index","color","red","green","blue","alpha","padding","window","navigator","clipboard","writeText","then","catch","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport hexRgb from 'hex-rgb';\nimport IconCopy from './IconCopy';\n\nclass HexInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [],\n            inputValue: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.demoDisplay = this.demoDisplay.bind(this); \n    }\n       \n    handleChange(e) {\n        this.setState({inputValue: e.target.value})\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const hex = this.state.inputValue;\n            const rgb = hexRgb(hex);\n            const newHistory = [...this.state.history];\n\n            newHistory.unshift({\n                hex,\n                rgb\n            });\n\n            this.setState({\n                inputValue: '',\n                history: newHistory,\n                copySuccess: ''\n            })\n            const storeString = JSON.stringify(newHistory);\n            localStorage.setItem('History', storeString)  \n        }\n        catch (error) {\n           alert(error);\n        }\n    }\n\n    handleClear() {\n        this.setState({history: []});\n        localStorage.clear('History')\n    }\n\n    demoDisplay() {\n        const demoHistory = [...this.state.history];\n        demoHistory.unshift(\n            {\"hex\": \"ccc\", \"rgb\": {\"red\": 204, \"green\": 204, \"blue\": 204, \"alpha\": 1}},\n            {\"hex\": \"bbb\", \"rgb\": {\"red\": 187, \"green\": 187, \"blue\": 187, \"alpha\": 1}},\n            {\"hex\": \"333\", \"rgb\": {\"red\": 51, \"green\": 51, \"blue\": 51, \"alpha\": 1}}\n            )\n        this.setState({history: demoHistory})\n    }\n\n    componentDidMount() {\n        const storage = localStorage.getItem('History');\n        const storageObject = JSON.parse(storage) || [];\n        this.setState({history:storageObject})\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"jumbotron mt-3\">\n                        <h1 className=\"display-4\">Welcome to HEX to RGB Converter!</h1>\n                        <p>To convert your HEX color code to RGB please insert your code below.</p>\n                        <div>\n                            <button className=\"btn btn-outline-primary\" disabled={this.state.history.length !== 0} onClick={this.demoDisplay}>DEMO</button>\n                        </div>\n                    </div>   \n                </div>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"input-group mb-3\">\n                                <input className=\"form-control\" type=\"text\" value={this.state.inputValue} onChange={this.handleChange} required placeholder=\"HEX:\" />                \n                                <div className=\"input-group-append\">\n                                    <button className=\"btn btn-outline-primary\" type=\"submit\" value=\"Submit\">Convert</button>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                    {this.state.history.length !== 0 ? (\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"d-block p-2 bg-dark text-white\">\n                                    <p>Your History:</p>\n                                </div>\n                                <ul>\n                                    {this.state.history.map((item, index) => {\n                                        const color = `rgba(${item.rgb.red}, ${item.rgb.green}, ${item.rgb.blue}, ${item.rgb.alpha})`\n                                        return (\n                                            <div key={index} style={{padding: 10}}>\n                                                <div>\n                                                    <li className=\"history-color\"><span>{`${item.hex} = ${color}`}</span></li>\n                                                     <span className=\"d-flex justify-content-center align-items-center colorLink\" onClick={() => {\n                                                         window.navigator.clipboard.writeText(color)\n                                                            .then(() => {})\n                                                            .catch(() => {alert('Ooops! Something went wrong!')})\n                                                     }} style={{backgroundColor: color}}><IconCopy /></span>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </ul>\n                                <button className=\"btn btn-outline-primary\" onClick={this.handleClear}>Clear History</button>\n                            </div>                    \n                        </div>\n                    ) : null}\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default HexInput;"]},"metadata":{},"sourceType":"module"}